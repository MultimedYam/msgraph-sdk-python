name: Build and validate generated code

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dev ]

permissions:
  contents: read

jobs:
  validate:
    name: Validate code accuracy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Lint with Pylint
      run: pylint msgraph --disable=W --rcfile=.pylintrc
  
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      max-parallel: 5
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Check code format
        run: |
          yapf -dr msgraph
      - name: Check import order
        run: |
          isort msgraph
      - name: Lint with Pylint
        run: |
          pylint msgraph --disable=W --rcfile=.pylintrc
      - name: Static type checking with Mypy
        run: |
          mypy msgraph
      - name: Run the tests
        run: |
          pytest
  
  publish:
    name: Publish distribution to PyPI
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    environment: pypi_prod
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install flit
        run: |
          pip install flit
      - name: Publish the distibution to PyPI
        run: flit publish
        env:
          FLIT_INDEX_URL: https://upload.pypi.org/legacy/
          FLIT_USERNAME: __token__
          FLIT_PASSWORD: ${{ secrets. PYPI_API_TOKEN }}


      



